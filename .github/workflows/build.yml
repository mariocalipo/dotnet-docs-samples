name: Build on PR Merge

on:
  pull_request:
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Determine Environment
        id: determine_environment
        run: echo "::set-output name=env::${{ github.event_name == 'pull_request' && contains(github.event.pull_request.base.ref, 'dev') && contains(github.event.pull_request.head.ref, 'main') && 'dev' || github.event_name == 'pull_request' && contains(github.event.pull_request.base.ref, 'stage') && contains(github.event.pull_request.head.ref, 'main') && 'stage' || github.event_name == 'pull_request' && contains(github.event.pull_request.base.ref, 'uat') && contains(github.event.pull_request.head.ref, 'main') && 'uat' || github.event_name == 'pull_request' && contains(github.event.pull_request.base.ref, 'prod') && contains(github.event.pull_request.head.ref, 'main') && 'prod' || 'unknown'}}"

      - name: Build and Deploy
        run: |
          if [ "${{ steps.determine_environment.outputs.env }}" == "dev" ]; then
            echo "Building and deploying for dev environment..."
          elif [ "${{ steps.determine_environment.outputs.env }}" == "stage" ]; then
            echo "Building and deploying for stage environment..."
          elif [ "${{ steps.determine_environment.outputs.env }}" == "uat" ]; then
            echo "Building and deploying for uat environment..."
          elif [ "${{ steps.determine_environment.outputs.env }}" == "prod" ]; then
            echo "Building and deploying for prod environment..."
          else
            echo "Unknown environment, skipping build and deploy."
          fi
