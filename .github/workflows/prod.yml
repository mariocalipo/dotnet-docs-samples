name: Build and Push Docker Image - prod

on:
  pull_request:
    types:
      - closed
    branches:
      - prod

jobs:
  build_push_prod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build and Publish Solution
        run: |
          cd netcore
          dotnet publish -c Release
      
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN_ADMIN }}
  
      - name: Build and Push Docker Image
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_SHA_SHORT: ${{ github.sha }}
          IMAGE_NAME: mariocalipo.jfrog.io/mariocalipo-docker/image-prod
        run: |
          cd netcore
          TAG="${PR_NUMBER}"
          IMAGE_NAME_WITH_TAG="$IMAGE_NAME:$TAG"
          LATEST_IMAGE_NAME="$IMAGE_NAME:latest"
          
          # Build and tag the Docker image
          jf docker build -t $IMAGE_NAME_WITH_TAG .
          jf docker build -t $LATEST_IMAGE_NAME .

          # Push the tagged image
          jf docker push $IMAGE_NAME_WITH_TAG
          jf docker push $LATEST_IMAGE_NAME
          
      - name: Publish Build info With JFrog CLI
        env:
          # Generated and maintained by GitHub
          JFROG_CLI_BUILD_NAME: jfrog-docker-build-prod
          # JFrog organization secret
          JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}
        run: |
          # Export the build name and build number
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish
